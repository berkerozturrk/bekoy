public class Solution
{
    public string LongestPalindrome(string s)
    {
        int n = s.Length;
        int[,] dp = new int[n, n];
        int maxLength = 0;
        string result = "";

        for (int diff = 0; diff < n; diff++)
        {
            for (int i = 0, j = i + diff; j < n; i++, j++)
            {
                if (i == j)
                {
                    dp[i, j] = 1;
                }
                else if (diff == 1)
                {
                    dp[i, j] = (s[i] == s[j]) ? 2 : 0;
                }
                else
                {
                    if (s[i] == s[j] && dp[i + 1, j - 1] > 0)
                    {
                        dp[i, j] = dp[i + 1, j - 1] + 2;
                    }
                    else
                    {
                        dp[i, j] = 0;
                    }
                }

                if (dp[i, j] > 0)
                {
                    if (maxLength < (j - i + 1))
                    {
                        maxLength = j - i + 1;
                        result = s.Substring(i, maxLength);
                    }
                }
            }
        }

        return result;
    }
}
